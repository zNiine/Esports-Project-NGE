{"ast":null,"code":"var _jsxFileName = \"/Users/zniine/nge/src/Components/assigned/tournteam.js\";\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport redArrow from '../Images/redx.png';\n\nclass tournteam extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userID: '',\n      tid: '',\n      teamID: '',\n      captain: false,\n      roster: [],\n      showX: false\n    };\n    this.state.tid = this.props.tid;\n    this.state.teamID = this.props.teamId;\n    this.state.userID = this.props.userID;\n  }\n\n  componentDidMount() {\n    firebase.database().ref('tourneys/' + this.state.tid + '/teams/' + this.state.teamID + '/captain/').once('value', data => {\n      if (data.toJSON() == this.state.userID) {\n        this.setState({\n          captain: true\n        });\n      }\n    });\n    this.loadRoster();\n  }\n\n  loadRoster() {\n    firebase.database().ref('tourneys/' + this.state.tid + '/teams/' + this.state.teamID + '/teamName/').once('value', data => {\n      this.setState({\n        teamName: data.toJSON()\n      });\n    });\n    const rosterQuery = firebase.database().ref().child('tourneys/' + this.state.tid + '/teams/' + this.state.teamID + '/roster/');\n    rosterQuery.once('value', snapshot => {\n      snapshot.forEach(child => {\n        this.setState({\n          roster: this.state.roster.concat(child.val())\n        });\n      });\n    });\n  }\n\n  showXFunc(d) {\n    this.setState({\n      showX: !this.showX\n    });\n  }\n\n  render() {\n    const showX = this.state.showX;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.captain ? React.createElement(\"div\", {\n      id: \"captainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"rosterPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"rosterPanelNamePlate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Roster\"), React.createElement(\"div\", {\n      id: \"rosterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.roster.map((data, i) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        id: \"rosterPictureTableTD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"rosterPicture\",\n        src: this.state.roster[i].pp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        id: \"rosterUsername\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.roster[i].username), React.createElement(\"td\", {\n        id: \"rosterRemove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.showX ? React.createElement(\"img\", {\n        id: \"xId\",\n        src: redArrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }) : null));\n    })))), React.createElement(\"div\", {\n      id: \"gamesPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"gamePanelNamePlate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Games\")), React.createElement(\"div\", {\n      id: \"controlPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"controlPanelNamePlate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.teamName), React.createElement(\"div\", {\n      id: \"controlTeamMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.showXFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Remove Player\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Invite Player\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Disband Team\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      id: \"playerContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default tournteam;","map":{"version":3,"sources":["/Users/zniine/nge/src/Components/assigned/tournteam.js"],"names":["React","Component","firebase","redArrow","tournteam","constructor","props","state","userID","tid","teamID","captain","roster","showX","teamId","componentDidMount","database","ref","once","data","toJSON","setState","loadRoster","teamName","rosterQuery","child","snapshot","forEach","concat","val","showXFunc","d","render","map","i","pp","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport redArrow from '../Images/redx.png'\n\n\nclass tournteam extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            userID: '',\n            tid: '',\n            teamID: '',\n            captain: false,\n            roster: [],\n            showX: false,\n        }\n        this.state.tid = this.props.tid\n        this.state.teamID = this.props.teamId\n        this.state.userID = this.props.userID\n      \n    }\n\n    componentDidMount(){\n        firebase.database().ref('tourneys/' + this.state.tid + '/teams/' + this.state.teamID + '/captain/').once('value', (data) => {\n\n            if(data.toJSON() == this.state.userID){\n                   this.setState({\n                       captain: true,\n                   })\n               }\n           })\n           this.loadRoster()\n        \n\n    }\n\n   loadRoster(){\n    firebase.database().ref('tourneys/' + this.state.tid + '/teams/' + this.state.teamID + '/teamName/').once('value', (data) => {\n        \n               this.setState({\n                   teamName: data.toJSON(),\n               })\n           \n       })\n\n\n    const rosterQuery = firebase.database().ref().child('tourneys/' + this.state.tid + '/teams/' + this.state.teamID + '/roster/');\n    rosterQuery.once('value',snapshot =>{\n        snapshot.forEach(child => {\n           \n          \n                this.setState({\n                    roster: this.state.roster.concat(child.val())\n                })\n           \n        })\n    })\n\n\n\n\n   }\n\n   showXFunc(d){\n       this.setState({\n           showX: !this.showX,\n       })\n   }\n\n    render() {\n        const { showX } = this.state;\n        return (\n            <div>\n                {\n                    this.state.captain ?\n                    <div id=\"captainContainer\">\n                        <div id=\"rosterPanel\">\n                        <div id=\"rosterPanelNamePlate\">\n                            Roster\n                        </div>\n                        <div id=\"rosterContainer\">\n                            <table>\n                                \n                                 {this.state.roster.map((data, i) =>{\n                                    return(\n                                        <tr>\n                                            <td id=\"rosterPictureTableTD\"> \n                                                <img id=\"rosterPicture\" src={this.state.roster[i].pp} />\n                                            </td>\n                                            <td id=\"rosterUsername\">\n                                                {this.state.roster[i].username} \n                                            </td>\n                                            <td id=\"rosterRemove\">\n                                                {this.state.showX ? \n                                                <img id=\"xId\" src={redArrow} />\n                                                :\n                                                null\n                                                }\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </table>\n\n\n\n\n                        </div>\n\n\n\n                        </div>\n                        <div id=\"gamesPanel\">\n                            <div id=\"gamePanelNamePlate\">\n                                Games\n                            </div>\n\n                        </div>\n\n                        <div id=\"controlPanel\">\n                            <div id=\"controlPanelNamePlate\">\n                                {this.state.teamName}\n                            </div>\n                            <div id=\"controlTeamMenu\">\n                            <span onClick={this.showXFunc}>Remove Player</span><br />\n                            <span>Invite Player</span><br />\n                            <span>Disband Team</span><br />\n\n                            </div>\n\n                        </div>\n                        \n\n                    </div>\n                    :\n                    <div id=\"playerContainer\">\n\n                    </div>\n                        \n\n\n\n                }\n            </div>\n        );\n    }\n}\n\nexport default tournteam;"]},"metadata":{},"sourceType":"module"}