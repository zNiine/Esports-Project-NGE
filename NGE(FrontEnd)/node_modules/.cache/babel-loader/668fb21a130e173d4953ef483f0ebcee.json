{"ast":null,"code":"var _jsxFileName = \"/Users/zniine/nge/src/Components/assigned/createTeam.js\";\nimport React, { Component } from 'react';\nimport { userInfo } from 'os';\nimport { Route, withRouter } from 'react-router-dom';\nimport * as firebase from 'firebase';\n\nclass createTeam extends Component {\n  constructor(props) {\n    super(props);\n    this.tid = this.props.tid;\n    this.state = {\n      tid: this.tid,\n      teamName: [],\n      MyteamName: ''\n    };\n  }\n\n  createTeamButtonClick() {\n    var checkTeamName = this.checkTeamNameFunc();\n    var that = this;\n\n    if (checkTeamName == true) {\n      alert(\"Name already in use\");\n    } else {\n      var url = 'http://127.0.0.1:5000/createTeam';\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          MyteamName: this.state.MyteamName,\n          tid: this.state.tid\n        })\n      }).then(res => res.json()).then(responce => {\n        var teamData = {\n          teamid: responce,\n          captain: firebase.auth().currentUser.uid,\n          teamName: this.state.MyteamName\n        };\n        var tournamentUpdates = {};\n        tournamentUpdates['/tourneys/' + this.state.tid + '/teams/' + responce] = teamData;\n        var playerUpdates = {};\n        playerUpdates['futureTourneys/' + this.state.tid + '/Players/' + firebase.auth().currentUser.uid] = responce;\n        firebase.database().ref().update(tournamentUpdates);\n        firebase.database().ref().update(playerUpdates);\n        this.componentReset();\n      });\n      var teamData = {\n        captain: firebase.auth().currentUser.uid,\n        teamName: this.teamName\n      };\n    }\n  }\n\n  componentReset() {}\n\n  checkTeamNameFunc() {\n    var teamNameChec = this.teamName;\n    const checkTeamNameQuery = firebase.database().ref().child('/tourneys/' + this.state.tid + '/teams/');\n    checkTeamNameQuery.once('value', snapshot => {\n      snapshot.forEach(child => {\n        this.setState({\n          teamName: this.state.teamName.concat(child.val())\n        });\n      });\n      var check = false;\n\n      for (var i = 0; i < this.state.teamName.length; i++) {\n        if (this.state.teamName[i].name === teamNameChec) {\n          check = true;\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      return check;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"createTeamPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"teamNameInput\",\n      ref: this.MyteamName,\n      onChange: e => this.setState({\n        MyteamName: e.target.value\n      }),\n      placeholder: \"Team Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"createTeamButton\",\n      onClick: () => {\n        this.createTeamButtonClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" Create \"));\n  }\n\n}\n\nexport default withRouter(createTeam);","map":{"version":3,"sources":["/Users/zniine/nge/src/Components/assigned/createTeam.js"],"names":["React","Component","userInfo","Route","withRouter","firebase","createTeam","constructor","props","tid","state","teamName","MyteamName","createTeamButtonClick","checkTeamName","checkTeamNameFunc","that","alert","url","fetch","method","headers","body","JSON","stringify","then","res","json","responce","teamData","teamid","captain","auth","currentUser","uid","tournamentUpdates","playerUpdates","database","ref","update","componentReset","teamNameChec","checkTeamNameQuery","child","once","snapshot","forEach","setState","concat","val","check","i","length","name","render","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { userInfo } from 'os';\nimport { Route , withRouter} from 'react-router-dom';\nimport * as firebase from 'firebase';\n\n\n\nclass createTeam extends Component {\n    constructor(props){\n        super(props)\n        this.tid = this.props.tid\n        this.state={\n            tid: this.tid,\n            teamName: [],\n            MyteamName: '',\n        }\n       \n    }\n\n    createTeamButtonClick(){\n        var checkTeamName = this.checkTeamNameFunc()\n        var that = this\n        if(checkTeamName == true)\n        {\n            alert(\"Name already in use\")\n        }\n        else{\n            var url = 'http://127.0.0.1:5000/createTeam'\n            fetch(url, {\n                  method: 'POST',\n                  headers:{\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                 body: JSON.stringify({\n                    MyteamName: this.state.MyteamName,\n                  tid: this.state.tid\n                })\n      })\n      .then(res => res.json())\n      .then(responce => {\n        var teamData = {\n            teamid: responce,\n            captain: firebase.auth().currentUser.uid,\n            teamName: this.state.MyteamName,\n        }\n\n        var tournamentUpdates = {}\n        tournamentUpdates['/tourneys/' + this.state.tid + '/teams/' + responce] = teamData\n        var playerUpdates = {}\n        playerUpdates['futureTourneys/' + this.state.tid + '/Players/' + firebase.auth().currentUser.uid] = responce\n        firebase.database().ref().update(tournamentUpdates)\n        firebase.database().ref().update(playerUpdates)\n        this.componentReset()\n        \n\n    })\n            var teamData = {\n                captain: firebase.auth().currentUser.uid,\n                teamName: this.teamName,\n            }\n\n           \n\n\n\n        }\n    }\n\n    componentReset(){\n        \n    }\n\n    checkTeamNameFunc(){\n    var teamNameChec = this.teamName\n    const checkTeamNameQuery = firebase.database().ref().child('/tourneys/' + this.state.tid + '/teams/')\n    checkTeamNameQuery.once('value', snapshot => {\n        snapshot.forEach(child => {\n            this.setState({\n                teamName: this.state.teamName.concat(child.val())\n            })\n            \n        })\n        var check = false;\n        for(var i = 0; i < this.state.teamName.length; i++)\n        {\n           \n            if(this.state.teamName[i].name === teamNameChec)\n            {\n                check = true;\n                break;\n            }\n            else{\n                continue;\n            }\n        }\n\n        return check;\n    })\n\n\n    }\n\n\n    render() {\n        return (\n            <div id=\"createTeamPanel\">\n                <input id=\"teamNameInput\" ref={this.MyteamName} onChange={e => this.setState({\n                    MyteamName: e.target.value,\n                })} placeholder=\"Team Name\" /><br />\n                <button id=\"createTeamButton\" onClick={()=>{this.createTeamButtonClick()}}> Create </button>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(createTeam);"]},"metadata":{},"sourceType":"module"}